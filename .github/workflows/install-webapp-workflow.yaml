on: [workflow_dispatch]
name: web app deployment
env:
  APP_NAME: feweb-7cu6grksc6oi6
  DB_NAME: coreDb
  SERVER_NAME: sqlserver7cu6grksc6oi6
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:

      # Checkout code
    - uses: actions/checkout@main
    - name: login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: install app and db schema
      run: |
        az configure --defaults group=${{ secrets.AZURE_RG }}

        # az config set defaults.location=eastus defaults.group=lazard-rg

        cd /home/ahmedbham/msdocs-app-service-sqldb-dotnetcore
        # echo `pwd`
        # echo $(az account show)
  
        # remote_url=$(az webapp deployment list-publishing-credentials --name {{env.APP_NAME}} --query scmUri -o tsv)
        remote_url=$(az webapp deployment list-publishing-credentials --name feweb-7cu6grksc6oi6 --query scmUri -o tsv)
        remote_url_final=$(echo $remote_url | sed -e 's|//\$|//\\$|')
        echo "remote url $remote_url_final"

        git_remote=$(git remote show | grep "azure")
        echo "git remote $git_remote"
        if [ -z "$git_remote" ]; then
          echo "git remote add azure"
          git remote add azure $remote_url_final
        fi;  

        echo "git push azure"
        git push azure main:master

        echo "env DB_NAME ${{ env.DB_NAME }} ${{env.DB_NAME}}"
        echo "server name ${{ env.SERVER_NAME }} "

        connection_string=$(az sql db show-connection-string --client ado.net --name ${{ env.DB_NAME }} --server ${{ env.SERVER_NAME }})
        re_connection_string=$(echo $connection_string | sed -e 's/<username>/${{ secrets.SQL_DB_ADMIN_NAME }}/' -e 's/<password>/${{ secrets.SQL_DB_PASSWORD }}/')
        az webapp config connection-string set --connection-string-type SQLServer -n ${{ env.APP_NAME }} --settings MyDbConnection="$re_connection_string"
        
        cd DotNetCoreSqlDb
        MyDbConnection='Server=tcp:${{ env.SERVER_NAME }}.database.windows.net,1433;Initial Catalog=coreDb;Persist Security Info=False;User ID=${{ secrets.SQL_DB_ADMIN_NAME }};Password=${{ secrets.SQL_DB_PASSWORD }};Encrypt=True;TrustServerCertificate=False;'
        tmp=$(mktemp)
        jq --arg a "$MyDbConnection" '.ConnectionStrings.MyDbConnection = $a' appsettings.json > "$tmp" && mv "$tmp" appsettings.json

        dotnet ef migrations add InitialCreate2
        dotnet ef database update
